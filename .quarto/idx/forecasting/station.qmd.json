{"title":"Station Forecast","markdown":{"yaml":{"title":"Station Forecast","format":"html","execute":{"echo":false}},"containsRefs":false,"markdown":"\n\n<style>\n  body {\n    font-family: Arial, sans-serif;\n    margin: 20px;\n  }\n  label {\n    font-weight: bold;\n  }\n  #forecast-chart {\n    width: 100%;\n    height: 500px;\n    margin-top: 20px;\n  }\n</style>\n\n<label for=\"station-dropdown\">Select Station:</label>\n<select id=\"station-dropdown\"></select>\n\n<div id=\"forecast-chart\"></div>\n\n<!-- Load Plotly + PapaParse -->\n<script src=\"https://cdn.plot.ly/plotly-latest.min.js\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/PapaParse/5.4.1/papaparse.min.js\"></script>\n\n<script>\n  const stations = [\n    \"Ashok Vihar, Delhi - DPCC\",\"Bawana, Delhi - DPCC\",\"Dr. Karni Singh Shooting Range, Delhi - DPCC\",\n    \"Dwarka-Sector 8, Delhi - DPCC\",\"Jahangirpuri, Delhi - DPCC\",\"Jawaharlal Nehru Stadium, Delhi - DPCC\",\n    \"Major Dhyan Chand National Stadium, Delhi - DPCC\",\"Mandir Marg, Delhi - DPCC\",\"Mundka, Delhi - DPCC\",\n    \"Najafgarh, Delhi - DPCC\",\"Narela, Delhi - DPCC\",\"Nehru Nagar, Delhi - DPCC\",\"Okhla Phase-2, Delhi - DPCC\",\n    \"Patparganj, Delhi - DPCC\",\"Punjabi Bagh, Delhi - DPCC\",\"Pusa, Delhi - DPCC\",\"R K Puram, Delhi - DPCC\",\n    \"Rohini, Delhi - DPCC\",\"Sonia Vihar, Delhi - DPCC\",\"Sri Aurobindo Marg, Delhi - DPCC\",\n    \"Vivek Vihar, Delhi - DPCC\",\"Wazirpur, Delhi - DPCC\"\n  ];\n\n  // --- Preselect from query param ---\n  function getQueryParam(param) {\n    const urlParams = new URLSearchParams(window.location.search);\n    return urlParams.get(param);\n  }\n\n  const dropdown = document.getElementById(\"station-dropdown\");\n  const selectedStation = getQueryParam(\"station\") || stations[0];\n\n  stations.forEach(station => {\n    const option = document.createElement(\"option\");\n    option.value = station;\n    option.text = station;\n    if (station === selectedStation) option.selected = true;\n    dropdown.add(option);\n  });\n\n  // --- CSV + Plotting ---\n  let allData = null;\n\n  Papa.parse(\"./data/dataset/timesfm.csv\", {\n    download: true,\n    header: true,\n    dynamicTyping: true,\n    complete: function(results) {\n      allData = results.data;\n\n      allData.forEach(row => {\n        row.Timestamp = new Date(row.Timestamp);\n      });\n\n      console.log(\"CSV loaded:\", allData.length, \"rows\");\n\n      plotForecast(selectedStation);\n    },\n    error: function(err) {\n      console.error(\"CSV load error:\", err);\n      document.getElementById(\"forecast-chart\").innerHTML = \"<p>Failed to load data.</p>\";\n    }\n  });\n\n  // --- Dropdown change: update URL + plot ---\n  dropdown.addEventListener(\"change\", function() {\n    const station = dropdown.value;\n\n    // Update query param in the browser (without reload)\n    const newUrl = window.location.pathname + \"?station=\" + encodeURIComponent(station);\n    window.history.replaceState(null, \"\", newUrl);\n\n    // Update chart instantly\n    plotForecast(station);\n  });\n\n  function plotForecast(station) {\n    if (!allData) return;\n\n    const startDate = new Date(\"2023-10-01T00:00:00\");\n    const cutoff = new Date(\"2023-12-31T23:00:00\");\n\n    const stationData = allData.filter(row =>\n      row.station === station &&\n      row.Timestamp >= startDate &&\n      row.Timestamp <= cutoff\n    );\n\n\n    if (stationData.length === 0) {\n      document.getElementById(\"forecast-chart\").innerHTML = \"<p>No data found for this station before cutoff date.</p>\";\n      return;\n    }\n\n    const dates = stationData.map(row => row.Timestamp);\n    const actual = stationData.map(row => row[\"Actual_PM2.5\"]);\n    const predicted = stationData.map(row => row[\"Predicted_PM2.5\"]);\n\n    Plotly.newPlot(\"forecast-chart\", [\n      { x: dates, y: actual, mode: \"lines\", name: \"Actual PM₂.₅\" },\n      { x: dates, y: predicted, mode: \"lines\", name: \"Predicted PM₂.₅\" }\n    ], {\n      title: station + \" PM₂.₅ Forecast\",\n      xaxis: { title: \"Timestamp\" },\n      yaxis: { title: \"PM₂.₅ (µg/m³)\" },\n      responsive: true\n    });\n  }\n</script>\n","srcMarkdownNoYaml":"\n\n<style>\n  body {\n    font-family: Arial, sans-serif;\n    margin: 20px;\n  }\n  label {\n    font-weight: bold;\n  }\n  #forecast-chart {\n    width: 100%;\n    height: 500px;\n    margin-top: 20px;\n  }\n</style>\n\n<label for=\"station-dropdown\">Select Station:</label>\n<select id=\"station-dropdown\"></select>\n\n<div id=\"forecast-chart\"></div>\n\n<!-- Load Plotly + PapaParse -->\n<script src=\"https://cdn.plot.ly/plotly-latest.min.js\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/PapaParse/5.4.1/papaparse.min.js\"></script>\n\n<script>\n  const stations = [\n    \"Ashok Vihar, Delhi - DPCC\",\"Bawana, Delhi - DPCC\",\"Dr. Karni Singh Shooting Range, Delhi - DPCC\",\n    \"Dwarka-Sector 8, Delhi - DPCC\",\"Jahangirpuri, Delhi - DPCC\",\"Jawaharlal Nehru Stadium, Delhi - DPCC\",\n    \"Major Dhyan Chand National Stadium, Delhi - DPCC\",\"Mandir Marg, Delhi - DPCC\",\"Mundka, Delhi - DPCC\",\n    \"Najafgarh, Delhi - DPCC\",\"Narela, Delhi - DPCC\",\"Nehru Nagar, Delhi - DPCC\",\"Okhla Phase-2, Delhi - DPCC\",\n    \"Patparganj, Delhi - DPCC\",\"Punjabi Bagh, Delhi - DPCC\",\"Pusa, Delhi - DPCC\",\"R K Puram, Delhi - DPCC\",\n    \"Rohini, Delhi - DPCC\",\"Sonia Vihar, Delhi - DPCC\",\"Sri Aurobindo Marg, Delhi - DPCC\",\n    \"Vivek Vihar, Delhi - DPCC\",\"Wazirpur, Delhi - DPCC\"\n  ];\n\n  // --- Preselect from query param ---\n  function getQueryParam(param) {\n    const urlParams = new URLSearchParams(window.location.search);\n    return urlParams.get(param);\n  }\n\n  const dropdown = document.getElementById(\"station-dropdown\");\n  const selectedStation = getQueryParam(\"station\") || stations[0];\n\n  stations.forEach(station => {\n    const option = document.createElement(\"option\");\n    option.value = station;\n    option.text = station;\n    if (station === selectedStation) option.selected = true;\n    dropdown.add(option);\n  });\n\n  // --- CSV + Plotting ---\n  let allData = null;\n\n  Papa.parse(\"./data/dataset/timesfm.csv\", {\n    download: true,\n    header: true,\n    dynamicTyping: true,\n    complete: function(results) {\n      allData = results.data;\n\n      allData.forEach(row => {\n        row.Timestamp = new Date(row.Timestamp);\n      });\n\n      console.log(\"CSV loaded:\", allData.length, \"rows\");\n\n      plotForecast(selectedStation);\n    },\n    error: function(err) {\n      console.error(\"CSV load error:\", err);\n      document.getElementById(\"forecast-chart\").innerHTML = \"<p>Failed to load data.</p>\";\n    }\n  });\n\n  // --- Dropdown change: update URL + plot ---\n  dropdown.addEventListener(\"change\", function() {\n    const station = dropdown.value;\n\n    // Update query param in the browser (without reload)\n    const newUrl = window.location.pathname + \"?station=\" + encodeURIComponent(station);\n    window.history.replaceState(null, \"\", newUrl);\n\n    // Update chart instantly\n    plotForecast(station);\n  });\n\n  function plotForecast(station) {\n    if (!allData) return;\n\n    const startDate = new Date(\"2023-10-01T00:00:00\");\n    const cutoff = new Date(\"2023-12-31T23:00:00\");\n\n    const stationData = allData.filter(row =>\n      row.station === station &&\n      row.Timestamp >= startDate &&\n      row.Timestamp <= cutoff\n    );\n\n\n    if (stationData.length === 0) {\n      document.getElementById(\"forecast-chart\").innerHTML = \"<p>No data found for this station before cutoff date.</p>\";\n      return;\n    }\n\n    const dates = stationData.map(row => row.Timestamp);\n    const actual = stationData.map(row => row[\"Actual_PM2.5\"]);\n    const predicted = stationData.map(row => row[\"Predicted_PM2.5\"]);\n\n    Plotly.newPlot(\"forecast-chart\", [\n      { x: dates, y: actual, mode: \"lines\", name: \"Actual PM₂.₅\" },\n      { x: dates, y: predicted, mode: \"lines\", name: \"Predicted PM₂.₅\" }\n    ], {\n      title: station + \" PM₂.₅ Forecast\",\n      xaxis: { title: \"Timestamp\" },\n      yaxis: { title: \"PM₂.₅ (µg/m³)\" },\n      responsive: true\n    });\n  }\n</script>\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":false,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../styles.css"],"toc":true,"output-file":"station.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.7.32","theme":["cosmo","brand"],"title":"Station Forecast"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}